@model ClickApp.ViewModels.CreateOfferViewModel

@{
    ViewData["Title"] = "Create offer";
}
<div class="container-fluid">
    <h4 class="text-center">Create new offer</h4>
    <div class="row justify-content-center">
        <div class="col-md-4">
            <form asp-action="Create" method="post" asp-route-returnUrl="@Context.Request.Query["returnUrl"]">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Title" class="control-label"></label>
                    <input asp-for="Title" class="form-control" />
                    <span asp-validation-for="Title" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
                <div class="form-group form-check d-inline-block">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="IsProfessional" /> @Html.DisplayNameFor(model => model.IsProfessional)
                    </label>
                </div>
                <div class="form-group form-check d-inline-block ml-3">
                    <label class="form-check-label">
                        <input class="form-check-input" asp-for="IsPublic" /> @Html.DisplayNameFor(model => model.IsPublic)
                    </label>
                </div>
                <div class="form-group">
                    <label asp-for="ImageUrl" class="control-label"></label>
                    <input asp-for="ImageUrl" class="form-control" />
                    <span asp-validation-for="ImageUrl" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ValidUntil" class="control-label"></label>
                    <input type="date" asp-for="ValidUntil" class="form-control" value="@Model.ValidUntil" />
                    <span asp-validation-for="ValidUntil" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ImportantNote" class="control-label"></label>
                    <input asp-for="ImportantNote" class="form-control" />
                    <span asp-validation-for="ImportantNote" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <input type="submit" value="Create" class="btn btn-primary" style="background-color: #CAF7B8; color:black" />
                </div>
            </form>
        </div>
    </div>
</div>

<div class="row justify-content-center m-0">
    <a asp-action="Overview" class="btn btn-primary" style="background-color: #CAF7B8; color:black">Back to offer options</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
