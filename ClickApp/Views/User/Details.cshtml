@model ClickApp.ViewModels.UserViewModel

@using Microsoft.AspNetCore.Identity;
@using ClickApp.Services.Interfaces;


@inject UserManager<ApplicationUser> _userManager;
@inject IFriendshipRequestsService _friendshipRequestsService;
@inject IFriendshipService _friendshipService;



@{
    ViewData["Title"] = "Profile";
    var user = await _userManager.FindByNameAsync(User.Identity.Name);
}

@section Styles{
    <link rel="stylesheet" href="~/css/Profile.css" />
}
<div class="Container">
    <div class="row justify-content-center">
        <img class="roundImage profilePic" id="profilePicSmall" src="@Model.ProfilePhotoURL" onclick="showProfileImage()" />
        <h1 class="d-inline-block pl-5 align-self-center">@Model.Name @Model.LastName</h1>
    </div>
    <div class="row justify-content-center m-2">
        @if (user.Id != @Model.Id)
        {
            if (_friendshipRequestsService.CheckIfRequestSent(user.Id, Model.Id))
            {
                <a class="btn btn-success text-light" asp-controller="FriendshipRequest" asp-action="Delete" asp-route-requestedUserId="@Model.Id">Request sent</a>
            }
            else if (_friendshipRequestsService.CheckIfRequestReceived(user.Id, Model.Id))
            {
                <li class="nav-item dropdown m-2 p-2 justify-content-center">
                    <a class="btn btn-primary nav-link dropdown-toggle text-light m-2" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">Friendship requested</a>
                    <ul class="dropdown-menu bg-light" aria-labelledby="navbarDropdown">
                        <li>
                            <a class="btn btn-success nav-link m-1 text-light" asp-area="" asp-controller="FriendshipRequest" asp-action="Update" asp-route-requestDecision="true" asp-route-requestedUserId="@Model.Id">Accept</a>
                            <a class="btn btn-danger nav-link  m-1 text-light" asp-area="" asp-controller="FriendshipRequest" asp-action="Update" asp-route-requestDecision="false" asp-route-requestedUserId="@Model.Id">Decline Request</a>
                        </li>
                    </ul>
                </li>

            }
            else if (_friendshipService.GetByFriendId(user.Id, Model.Id) !=null && _friendshipService.GetByFriendId(user.Id, Model.Id).FriendShipStatus==true)
            {
                <li class="nav-item dropdown m-2 p-2 justify-content-center">
                    <a class="btn btn-primary nav-link dropdown-toggle text-light m-2" href="#" id="navbarDropdown2" role="button" data-bs-toggle="dropdown" aria-expanded="false">Friend</a>
                    <ul class="dropdown-menu bg-light" aria-labelledby="navbarDropdown2">
                        <li>
                            <a class="btn btn-danger nav-link  m-1 text-light" asp-area="" asp-controller="Friendship" asp-action="Unfriend" asp-route-userId="@user.Id" asp-route-requestedUserId="@Model.Id">Unfriend</a>
                        </li>
                    </ul>
                </li>

            }
            else
            {
                <a class="btn btn-success text-light" asp-controller="FriendshipRequest" asp-action="Create" asp-route-requestedUserId="@Model.Id">Add friend</a>
            }
        }
    </div>
</div>

<div class="container-fluid d-none" id="profilePicLarge" onclick="hideProfileImage()">
    <div class="row justify-content-center">
        <img class="roundImage" id="profilePicLargeSize" src="@Model.ProfilePhotoURL" />
    </div>
</div>

<hr />
<div class="container" id="tabsContainer">
    <div class="row justify-content-center">
        <div class="profileTabs" onclick="showAboutInfo()">About</div>
        <div class="profileTabs" onclick="showFriendsInfo()">Friends</div>
        @if (user.Id == @Model.Id)
        {
            <div class="profileTabs" onclick="showGroupsInfo()">Groups</div>
            <div class="profileTabs" onclick="showMessagesInfo()">Messages</div>
            <div class="profileTabs" onclick="showConnectionsInfo()">Connections</div>
        }
        <div class="profileTabs" onclick="showPhotosInfo()">Photos</div>
        @if (user.Id == @Model.Id)
        {
            <div class="profileTabs" onclick="showCallendarInfo()">Callendar</div>
            <div class="profileTabs" onclick="showNotesInfo()">Notes</div>
        }
    </div>
</div>
<div class="container d-none m-5 p-2" id="aboutInfo">
    <div>
        <dl class="row">
            <div class="col">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.DateOfBirth)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.DateOfBirth)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Description)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Description)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Address)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Address)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.City)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.City)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Country)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Country)
                </dd>
            </div>

            @if (Model.Skills.Count != 0)
            {
                <div class="col">
                    <h4>Skills</h4>
                    @foreach (var skill in Model.Skills)
                    {
                        <p>@skill.Name</p>
                    }
                </div>
            }

            @if (Model.Interests.Count != 0)
            {
                <div class="col">
                    <h4>Interests</h4>
                    @foreach (var interest in Model.Interests)
                    {
                        <p>@interest.Name</p>
                    }
                </div>
            }

        </dl>
    </div>
    <div>
        <div class="row">
            @if (user.Id == @Model.Id)
            {
                <div class="profileTabs">@Html.ActionLink("Edit", "Edit", new { id = Model.Id })</div>
            }
            <div class="profileTabs" onclick="hideAboutInfo()">Close about tab</div>
        </div>
    </div>
</div>




@section Scripts{
    <script>
        function changeInnerText() {
            var btn = document.getElementById("RequestBtn");
            btn.innerText = "Request sent";
        }


        function showProfileImage() {
            hideAllInfo();
            hideContainer("tabsContainer");
            hideContainer("profilePicSmall")
            showContainer("profilePicLarge");
        }
        function hideProfileImage() {
            showContainer("profilePicSmall");
            hideContainer("profilePicLarge")
            showContainer("tabsContainer");
        }

        function showAboutInfo() {
            hideAllInfo();
            showContainer("aboutInfo");

        }
        function hideAboutInfo() {
            hideAllInfo();
            hideContainer("aboutInfo");
            showContainer("tabsContainer");

        }

        function showAboutInfo() {
            hideAllInfo();
            showContainer("aboutInfo");

        }
        function hideAboutInfo() {
            hideAllInfo();
            hideContainer("aboutInfo");
            showContainer("tabsContainer");

        }

        function showContainer(containerId) {
            var container = document.getElementById(containerId);
            container.classList.remove("d-none");
            container.classList.add("d-block");
        }
        function hideContainer(containerId) {
            var container = document.getElementById(containerId);
            container.classList.remove("d-block");
            container.classList.add("d-none");
        }

        function hideAllInfo() {
            hideContainer("aboutInfo");

        }
    </script>
}
